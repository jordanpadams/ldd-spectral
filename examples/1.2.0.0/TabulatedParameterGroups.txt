Spectral Dictionary Code Sample: Tabulated-Parameter Groups Spectra Table

This file shows a mock-up of a (fake) table of spectra in the format 
corresponding to "Tabulated-Parameter Groups" style, along with one possible 
way of providing the Spectral_Characteristics to go with it. "Tabulated-
Parameter Groups" tables can be binary or character.  Their defining 
characteristics are that each row contains a single, complete spectrum and 
within the Record, all the values for each parameter of the measurement are
grouped together. So, for example, there's a Group_Field class for just the 
measured value, a Group_Field class for the associated errors, a Group_Field 
class for the bin centers, and so on. Defining a Group_Field with just a 
single Field within it allows you to write a single field definition and 
ensures that all corresponding alues will be stored contiguously in the file. 

The bin paramaters can be in a Field_Group in the table record, defined using
the <Axis_Bin_Set> method, or referenced in this or another object or data 
product (the "Lookup" method).  The example below uses the last of these to
find the bin parameters elsewhere in the table record.

The example below is for a flat table of spectra where the spectral dimension 
is frequency, but the same method is applicable to wavenumber and wavelength
spectra. The table object could be of any type - character, binary, or 
delimited.
        
============================================================================        

The Spectral_Characteristics class appears in the <Discipline_Area> of the  
label.  Classes within the Spectral_Characteristics that are required to be 
present but not relevant to specifying bin parameters are elided.

            
    <sp:Spectral_Characteristics>
        <Local_Internal_Reference>
            <!--
                Note the correspondence between the identifier below, the
                specific local_reference_type, and the array definition
                following.
            -->
            <local_identifier_reference>TabParamGroups</local_identifier_reference>
            <local_reference_type>spectral_characteristics_to_table_object</local_reference_type>
        </Local_Internal_Reference>
        <sp:spectrum_format>Tabulated-Parameter Groups</sp:spectrum_format>
        <!--
            In the table below, all the spectral measurements are grouped together
            in the Group_Field_Binary class with the <name> of "Spectrum". Note,
            however, that we identify the location of the spectral data by the
            name of the Field_Binary class that defines the individual points 
            ("Counts"), NOT the Group_Field name.  So <sp:value_field_name> 
            must match the <name> of a Field, not a Group_Field.
        -->
        <sp:value_field_name>Counts</sp:value_field_name>
        <sp:spectral_bin_type>frequency</sp:spectral_bin_type>

        <sp:Observation_Parameters>
            ...
            <!-- 
                If there are any universally relevant (i.e., they are the same for
                all spectra in the table) observational parameters, they go here.
                Otherwise, this class can be omitted.
            -->
        </sp:Observation_Parameters>

        <sp:Field_of_View>
            <!-- 
                 This class is required to be present, but might be problematic for some
                 tabulated spectra products, depending on their origin.  If "field of view"
                 can be defined as usual, then do so. If field of view varies from spectrum 
                 to spectrum (for data collected from many observers, e.g.) ideally it 
                 should be its own field in the table. In that case, or if it is just not
                 known, that should be stated explicitly.  Use the <description> field to 
                 explain the situation to the user, and then use the <Circular_FOV> 
                 class to declare the overarching FOV concept to be "nil" - either because it
                 is not applicable or not known.
                 
                 If the FOV is not known, it would look something like this:
            -->
            <sp:description>
                The field of view was not reported with the data and could not be determined
                prior to archiving.
            </sp:description>
            <sp:Circular_FOV>
                <sp:diameter_angle unit="deg" xsi:nil="true" nilReason="unknown"/>
                <!-- Yes, the "unit=" part is required - that's a quirk of the schema definition system. -->
            </sp:Circular_FOV>
        </sp:Field_of_View>

        <sp:Bin_Description>
            <sp:bin_profile_description>
                <!-- 
                    Provide a description of HOW the bin widths were determined/defined here. For
                    example, it might be something like "Bin widths (and centers) are as reported
                    by the individual observer contributing the spectrum measurement."
                -->
            </sp:bin_profile_description>
            <!-- 
                Because the bin parameters are also fields in this table, we use the "Lookup" method
                to identify them.  As with the spectral measurements, we need to identify them by
                the <name> of the Field within the Group_Field:
            -->
            <sp:Spectral_Lookup>
                <sp:Bin_Center_Lookup>
                    <sp:bin_center_field_name>Bin Center</sp:bin_center_field_name>
                </sp:Bin_Center_Lookup>
                <sp:Bin_Width_Lookup>
                    <sp:bin_width_field_name>Bin Width</sp:bin_width_field_name>
                </sp:Bin_Width_Lookup>
            </sp:Spectral_Lookup>
        </sp:Bin_Description>
    </sp:Spectral_Characteristics>

                
Here is a mock-up of the corresponding Table_Binary containing a series of spectra. The
Group_Field_Binary classes are being used to create vectors to hold each of the spectral
parameters for all points in the spectrum.
        
    <Table_Binary>
        <name>Grouped Parameters Spectra Table</name>
        <local_identifier>TabParamGroups</local_identifier>
        <offset unit="byte">1000</offset>
        <records>132</records>
        <description>
            <!-- 
                You should provide a description of what's in your data table here, rather than the
                structural comments following.
            -->
            This table contains one spectrum per row, but the values for intensity, error, bin center, and bin width occur 
            in contiguous groups within the row.  So each row first lists all the observed counts, then all the errors, etc.
                
            In this case each group MUST contain only a single parameter, but there may be additional groups (unrelated to
            spectral parameters) within the record.
        </description>
            
        <Record_Binary>
            <fields>2</fields>
            <groups>4</groups>
            <record_length unit="byte">1500</record_length>
                
            <Field_Binary>
                <name>Target</name>
                <field_location unit="byte">1</field_location>
                <data_type>ASCII_String</data_type>
                <field_length unit="byte">30</field_length>
            </Field_Binary>
                
            <Field_Binary>
                <name>Date Observed</name>
                <field_location unit="byte">31</field_location>
                <data_type>ASCII_Date_YMD</data_type>
                <field_length unit="byte">10</field_length>
            </Field_Binary>
                
            <Group_Field_Binary>
                <name>Spectrum</name>
                <repetitions>50</repetitions>
                <fields>1</fields>
                <groups>0</groups>
                <description>
                        This array contains the observed values at each point in the spectrum.
                </description>
                <group_location unit="byte">41</group_location>
                <group_length unit="byte">100</group_length>
                <Field_Binary>
                    <name>Counts</name>
                    <field_location unit="byte">1</field_location>
                    <data_type>UnsignedMSB2</data_type>
                    <field_length unit="byte">2</field_length>
                    <unit>DN</unit>
                </Field_Binary>
            </Group_Field_Binary>
                
            <Group_Field_Binary>
                <name>Error</name>
                <repetitions>50</repetitions>
                <fields>1</fields>
                <groups>0</groups>
                <group_location unit="byte">141</group_location>
                <group_length unit="byte">100</group_length>
                <Field_Binary>
                    <name>OneSigma</name>
                    <field_location unit="byte">1</field_location>
                    <data_type>UnsignedMSB2</data_type>
                    <field_length unit="byte">2</field_length>
                    <unit>DN</unit>
                </Field_Binary>
            </Group_Field_Binary>
                
            <Group_Field_Binary>
                <name>Center Frequency</name>
                <repetitions>50</repetitions>
                <fields>1</fields>
                <groups>0</groups>
                <group_location unit="byte">241</group_location>
                <group_length unit="byte">200</group_length>
                <Field_Binary>
                    <name>Bin Center</name>
                    <field_location unit="byte">1</field_location>
                    <data_type>IEEE754MSBSingle</data_type>
                    <field_length unit="byte">4</field_length>
                    <unit>Hz</unit>
                </Field_Binary>
            </Group_Field_Binary>
                
            <Group_Field_Binary>
                <name>FWHM</name>
                <repetitions>50</repetitions>
                <fields>1</fields>
                <groups>0</groups>
                <group_location unit="byte">441</group_location>
                <group_length unit="byte">200</group_length>
                <Field_Binary>
                    <name>Bin Width</name>
                    <field_location unit="byte">1</field_location>
                    <data_type>IEEE754MSBSingle</data_type>
                    <field_length unit="byte">4</field_length>
                    <unit>Hz</unit>
                </Field_Binary>
            </Group_Field_Binary>
        </Record_Binary>
    </Table_Binary>
        